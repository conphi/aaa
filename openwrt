############# webdav opwd #######################################
GOOS=linux GOARCH=arm64 go build -o opwd /root/openwrt_webdav.go
##############
package main
import (
        "flag"
        "net/http"
         "golang.org/x/net/webdav"
)
func main() {
        port := flag.String("p", "1234", "a port")
        dir := flag.String("d", "/mnt/mmcblk1/", "a dir")
        tag := flag.String("t", "fuck", "a tag")
        flag.Parse()
        sub := "/" + *tag + "/"
    handler := &webdav.Handler{
        FileSystem: webdav.Dir(*dir),
        LockSystem: webdav.NewMemLS(),
    }
        http.Handle(sub, http.StripPrefix(sub, handler))
        http.ListenAndServe(":"+*port, nil)
}
###################
vi /etc/init.d/opwd
#!/bin/sh /etc/rc.common

START=99  # The start priority
STOP=10   # The stop priority

USE_PROCD=1
PROG=/root/opwd  # Path to your binary

start_service() {
    procd_open_instance
    procd_set_param command $PROG  # Command to run your binary
    procd_set_param respawn        # Automatically restart if it crashes
    procd_close_instance
}
#########################
chmod +x /etc/init.d/opwd
/etc/init.d/opwd start
/etc/init.d/opwd enable
########################################################################



## mt3000 backup
src/gz openwrt_core https://downloads.openwrt.org/releases/23.05.2/targets/mediatek/filogic/packages
src/gz openwrt_base https://downloads.openwrt.org/releases/23.05.2/packages/aarch64_cortex-a53/base
src/gz openwrt_luci https://downloads.openwrt.org/releases/23.05.2/packages/aarch64_cortex-a53/luci
src/gz openwrt_packages https://downloads.openwrt.org/releases/23.05.2/packages/aarch64_cortex-a53/packages
src/gz openwrt_routing https://downloads.openwrt.org/releases/23.05.2/packages/aarch64_cortex-a53/routing
src/gz openwrt_telephony https://downloads.openwrt.org/releases/23.05.2/packages/aarch64_cortex-a53/telephony

############ might need comment out option check_signature
### for src/gz supes https://dl.openwrt.ai/packages-23.05/aarch64_cortex-a53/kiddin9
cat /etc/opkg.conf
dest root /
dest ram /tmp
lists_dir ext /var/opkg-lists
option overlay_root /overlay
# option check_signature





#### source
src/gz ustc_base https://mirrors.ustc.edu.cn/openwrt/releases/22.03.6/packages/aarch64_cortex-a53/base/
src/gz ustc_luci https://mirrors.ustc.edu.cn/openwrt/releases/22.03.6/packages/aarch64_cortex-a53/luci/
src/gz ustc_packages https://mirrors.ustc.edu.cn/openwrt/releases/22.03.6/packages/aarch64_cortex-a53/packages/
src/gz ustc_routing https://mirrors.ustc.edu.cn/openwrt/releases/22.03.6/packages/aarch64_cortex-a53/routing/
src/gz ustc_telephony https://mirrors.ustc.edu.cn/openwrt/releases/22.03.6/packages/aarch64_cortex-a53/telephony/

src/gz ustc_core https://mirrors.ustc.edu.cn/openwrt/releases/23.05.2/targets/mediatek/filogic/packages
src/gz ustc_base https://mirrors.ustc.edu.cn/openwrt/releases/23.05.2/packages/aarch64_cortex-a53/base
src/gz ustc_luci https://mirrors.ustc.edu.cn/openwrt/releases/23.05.2/packages/aarch64_cortex-a53/luci
src/gz ustc_packages https://mirrors.ustc.edu.cn/openwrt/releases/23.05.2/packages/aarch64_cortex-a53/packages
src/gz ustc_routing https://mirrors.ustc.edu.cn/openwrt/releases/23.05.2/packages/aarch64_cortex-a53/routing
src/gz ustc_telephony https://mirrors.ustc.edu.cn/openwrt/releases/23.05.2/packages/aarch64_cortex-a53/telephony

21.02.7
src/gz ustc_base https://mirrors.ustc.edu.cn/openwrt/releases/21.02.7/packages/aarch64_cortex-a53/base/
src/gz ustc_luci https://mirrors.ustc.edu.cn/openwrt/releases/21.02.7/packages/aarch64_cortex-a53/luci/
src/gz ustc_packages https://mirrors.ustc.edu.cn/openwrt/releases/21.02.7/packages/aarch64_cortex-a53/packages/
src/gz ustc_routing https://mirrors.ustc.edu.cn/openwrt/releases/21.02.7/packages/aarch64_cortex-a53/routing/
src/gz ustc_telephony https://mirrors.ustc.edu.cn/openwrt/releases/21.02.7/packages/aarch64_cortex-a53/telephony/


###### tf card format to ext4 on mac os############
brew install e2fsprogs
diskutil list
diskutil unmountdisk /dev/disk44444444444444
sudo $(brew --prefix e2fsprogs)/sbin/mkfs.ext4 /dev/disk44444444444444
##### nfs server #########################################################
opkg install nfs-kernel-server
df -h
vim /etc/exports
/mnt/mmcblk1 *(rw,sync,insecure,no_subtree_check)  #### insecure for mac os error
/etc/init.d/nfsd restart
##################################################################################
cat /etc/openwrt_release
uname -a
opkg list-installed | grep luci

find . -name "*.ipk" -exec mv {} /path/to/destination/ \;

#################################################################################
remove dnsmasq （make menuconfig -----basefile） for offical openwrt
keep dnsmasq-full

##############root user compile##############
export FORCE_UNSAFE_CONFIGURE=1

###############切换用户的命令为：su username#########
cat /etc/passwd
su username
cd ./openwrt
sudo chown -R $USER:$GROUPS ./

###################################
useradd -m USERNAME
## You have to use -m, otherwise no home directory will be created. 
## passwd USERNAME

userdel username
rm -r /home/username
###################################
####### https://supes.top/ 
-luci-app-firewall -firewall -luci-app-gpsysupgrade -luci-app-autoreboot -luci-app-upnp -luci-app-wizard -luci-app-advanced
8021xd ????????
